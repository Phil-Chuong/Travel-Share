openapi: 3.0.3
info:
  title: Travel Share API
  description: API documentation for the Travel Share application
  version: 1.0.0
servers:
  - url: http://localhost:4000
    description: Local development server
paths:
  /users:
    get:
      summary: Fetch all users
      description: Fetches all users from the database.
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '500':
          description: Server error
    post:
      summary: Create a new user
      description: Creates a new user in the database.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewUser'
      responses:
        '201':
          description: User successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Missing required fields
        '500':
          description: Server error

  /users/{id}:
    get:
      summary: Fetch a user by ID
      description: Fetches a user from the database by their ID.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the user to fetch
      responses:
        '200':
          description: A single user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
        '500':
          description: Server error
    delete:
      summary: Delete a user by ID
      description: Deletes a user from the database by their ID.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the user to delete
      responses:
        '200':
          description: User successfully deleted
        '404':
          description: User not found
        '500':
          description: Server error

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          description: The user ID
        firstname:
          type: string
          description: The user's first name
        lastname:
          type: string
          description: The user's last name
        username:
          type: string
          description: The user's username
        email:
          type: string
          description: The user's email address
    NewUser:
      type: object
      required:
        - firstname
        - lastname
        - username
        - email
        - password
      properties:
        firstname:
          type: string
          description: The user's first name
        lastname:
          type: string
          description: The user's last name
        username:
          type: string
          description: The user's username
        email:
          type: string
          description: The user's email address
        password:
          type: string
          description: The user's password
